[["/home/project/src/components/Dashboard.tsx","import React, { useState, useEffect } from 'react';\nimport { collection, getDocs, query, where } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { Briefcase, CheckSquare, Users, DollarSign } from 'lucide-react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\ninterface Project {\n  id: string;\n  projectName: string;\n  clientId: string;\n  finalPrice: number;\n}\n\ninterface Client {\n  id: string;\n  clientName: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [clients, setClients] = useState<Client[]>([]);\n  const [teamMembers, setTeamMembers] = useState(0);\n  const [completedTasks, setCompletedTasks] = useState(0);\n  const [totalEarnings, setTotalEarnings] = useState(0);\n\n  useEffect(() => {\n    fetchProjects();\n    fetchClients();\n    fetchTeamMembers();\n    fetchCompletedTasks();\n    fetchTotalEarnings();\n  }, []);\n\n  const fetchProjects = async () => {\n    const querySnapshot = await getDocs(collection(db, 'projects'));\n    const projectList = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as Project));\n    setProjects(projectList);\n  };\n\n  const fetchClients = async () => {\n    const querySnapshot = await getDocs(collection(db, 'clients'));\n    const clientList = querySnapshot.docs.map(doc => ({ id: doc.id, clientName: doc.data().clientName } as Client));\n    setClients(clientList);\n  };\n\n  const fetchTeamMembers = async () => {\n    const querySnapshot = await getDocs(collection(db, 'teamMembers'));\n    setTeamMembers(querySnapshot.size);\n  };\n\n  const fetchCompletedTasks = async () => {\n    const q = query(collection(db, 'tasks'), where('status', '==', 'completed'));\n    const querySnapshot = await getDocs(q);\n    setCompletedTasks(querySnapshot.size);\n  };\n\n  const fetchTotalEarnings = async () => {\n    const querySnapshot = await getDocs(collection(db, 'projects'));\n    const total = querySnapshot.docs.reduce((sum, doc) => sum + (doc.data().finalPrice || 0), 0);\n    setTotalEarnings(total);\n  };\n\n  const recentProjects = projects.slice(0, 5);\n\n  const projectData = projects.map(project => ({\n    name: project.projectName,\n    value: project.finalPrice\n  }));\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <h1 className=\"text-3xl font-bold mb-6\">Dashboard</h1>\n\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8\">\n        <div className=\"bg-white rounded-lg shadow p-6 flex items-center\">\n          <Briefcase className=\"h-10 w-10 text-blue-500 mr-4\" />\n          <div>\n            <p className=\"text-sm text-gray-600\">Total Projects</p>\n            <p className=\"text-2xl font-bold\">{projects.length}</p>\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-6 flex items-center\">\n          <CheckSquare className=\"h-10 w-10 text-green-500 mr-4\" />\n          <div>\n            <p className=\"text-sm text-gray-600\">Completed Tasks</p>\n            <p className=\"text-2xl font-bold\">{completedTasks}</p>\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-6 flex items-center\">\n          <Users className=\"h-10 w-10 text-purple-500 mr-4\" />\n          <div>\n            <p className=\"text-sm text-gray-600\">Team Members</p>\n            <p className=\"text-2xl font-bold\">{teamMembers}</p>\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg shadow p-6 flex items-center\">\n          <DollarSign className=\"h-10 w-10 text-yellow-500 mr-4\" />\n          <div>\n            <p className=\"text-sm text-gray-600\">Total Earnings</p>\n            <p className=\"text-2xl font-bold\">${totalEarnings.toFixed(2)}</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Recent Projects */}\n      <div className=\"bg-white rounded-lg shadow mb-8\">\n        <div className=\"p-6\">\n          <h2 className=\"text-xl font-bold mb-4\">Recent Projects</h2>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Project Name</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Client</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Final Price</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {recentProjects.map((project) => (\n                  <tr key={project.id}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{project.projectName}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {clients.find(client => client.id === project.clientId)?.clientName || 'N/A'}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">${project.finalPrice.toFixed(2)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n\n      {/* Project Value Chart */}\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-xl font-bold mb-4\">Project Values</h2>\n        <div style={{ width: '100%', height: 300 }}>\n          <ResponsiveContainer>\n            <BarChart data={projectData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Bar dataKey=\"value\" fill=\"#8884d8\" />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"]]